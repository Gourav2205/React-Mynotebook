{"ast":null,"code":"var _jsxFileName = \"G:\\\\React Course\\\\inotebook\\\\client\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const notesInitial = [];\n  const [notes, setNotes] = useState(notesInitial);\n\n  // ADD A NOTE\n  const getNote = async () => {\n    const response = await fetch(`${host}/api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyOTczMDRiNjM1YTA5Nzc1ZTZlNmQ1In0sImlhdCI6MTY4MDQzODAyMH0.ayCIO_qrK50Th2tjrbPJMCa4MiAAfIKTVFUvGCLj768\"\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n  };\n\n  // ADD A NOTE\n  const addNote = async (title, content, tag) => {\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyOTczMDRiNjM1YTA5Nzc1ZTZlNmQ1In0sImlhdCI6MTY4MDQzODAyMH0.ayCIO_qrK50Th2tjrbPJMCa4MiAAfIKTVFUvGCLj768\"\n      },\n      body: JSON.stringify({\n        title,\n        content,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(\"Add\");\n    const note = {\n      \"_id\": \"64297338b635a09775e6e6d7\",\n      \"user\": \"64294cc356dcd291adgea4a9f\",\n      \"title\": title,\n      \"content\": content,\n      \"tag\": tag,\n      \"date\": \"2023-04-02T10:05:26.959Z\",\n      \"__v\": 0\n    };\n    setNotes(notes.concat(note));\n  };\n  // DELETE A NOTE\n  const deleteNote = id => {\n    console.log(\"delete note with id: \" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n  // EDIT A NOTE\n  const editNote = async (id, title, content, tag) => {\n    // Api Call\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyOTczMDRiNjM1YTA5Nzc1ZTZlNmQ1In0sImlhdCI6MTY4MDQzODAyMH0.ayCIO_qrK50Th2tjrbPJMCa4MiAAfIKTVFUvGCLj768\"\n      },\n      body: JSON.stringify({\n        title,\n        content,\n        tag\n      })\n    });\n    const json = response.json();\n    // Logic to edit in client\n    for (let index = 0; index < notes.length; index++) {\n      const element = notes[index];\n      if (element._id === id) {\n        element.title = title;\n        element.content = content;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(NoteState, \"hccfwx9qLG83YV7VqgUOSPmOD6I=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","notesInitial","notes","setNotes","getNote","response","fetch","method","headers","json","console","log","addNote","title","content","tag","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["G:/React Course/inotebook/client/src/context/notes/NoteState.js"],"sourcesContent":["import NoteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState = (props) => {\r\n    const host = \"http://localhost:5000\"\r\n    const notesInitial = []\r\n    const [notes, setNotes] = useState(notesInitial)\r\n\r\n    // ADD A NOTE\r\n    const getNote = async () => {\r\n        const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyOTczMDRiNjM1YTA5Nzc1ZTZlNmQ1In0sImlhdCI6MTY4MDQzODAyMH0.ayCIO_qrK50Th2tjrbPJMCa4MiAAfIKTVFUvGCLj768\"\r\n            }\r\n        });\r\n        const json = await response.json()\r\n        console.log(json)\r\n    }\r\n\r\n    // ADD A NOTE\r\n    const addNote = async (title, content, tag) => {\r\n        const response = await fetch(`${host}/api/notes/addnote`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyOTczMDRiNjM1YTA5Nzc1ZTZlNmQ1In0sImlhdCI6MTY4MDQzODAyMH0.ayCIO_qrK50Th2tjrbPJMCa4MiAAfIKTVFUvGCLj768\"\r\n            },\r\n            body: JSON.stringify({title, content, tag})\r\n        });\r\n        const json = response.json();\r\n        console.log(\"Add\")\r\n        const note = {\r\n            \"_id\": \"64297338b635a09775e6e6d7\",\r\n            \"user\": \"64294cc356dcd291adgea4a9f\",\r\n            \"title\": title,\r\n            \"content\": content,\r\n            \"tag\": tag,\r\n            \"date\": \"2023-04-02T10:05:26.959Z\",\r\n            \"__v\": 0\r\n        }\r\n        setNotes(notes.concat(note))\r\n    }\r\n    // DELETE A NOTE\r\n    const deleteNote = (id) => {\r\n        console.log(\"delete note with id: \" + id)\r\n        const newNotes = notes.filter((note) => { return note._id !== id })\r\n        setNotes(newNotes)\r\n    }\r\n    // EDIT A NOTE\r\n    const editNote = async (id, title, content, tag) => {\r\n        // Api Call\r\n        const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"auth-token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQyOTczMDRiNjM1YTA5Nzc1ZTZlNmQ1In0sImlhdCI6MTY4MDQzODAyMH0.ayCIO_qrK50Th2tjrbPJMCa4MiAAfIKTVFUvGCLj768\"\r\n            },\r\n            body: JSON.stringify({title, content, tag})\r\n        });\r\n        const json = response.json();\r\n        // Logic to edit in client\r\n        for (let index = 0; index < notes.length; index++) {\r\n            const element = notes[index];\r\n            if (element._id === id) {\r\n                element.title = title;\r\n                element.content = content;\r\n                element.tag = tag;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <NoteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNote }}>\r\n            {props.children}\r\n        </NoteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NoteState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}